<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 天地一键</title>
    <link>https://tiandiyijian.top/posts/</link>
    <description>Recent content in Posts on 天地一键</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Aug 2022 08:40:57 +0800</lastBuildDate><atom:link href="https://tiandiyijian.top/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang 实现BT下载器（一）</title>
      <link>https://tiandiyijian.top/posts/golang-bt/</link>
      <pubDate>Tue, 30 Aug 2022 08:40:57 +0800</pubDate>
      
      <guid>https://tiandiyijian.top/posts/golang-bt/</guid>
      <description>最近几年有在使用PT（Private Tracker）站，主要是高校站点，近几年看的剧和电影几乎都是在PT站里下载的，虽然校园网平时上网很慢，</description>
    </item>
    
    <item>
      <title>Ultimate Go Programming 笔记——第六章</title>
      <link>https://tiandiyijian.top/posts/ultimate-go-programming-chap6/</link>
      <pubDate>Thu, 07 Jul 2022 15:01:15 +0800</pubDate>
      
      <guid>https://tiandiyijian.top/posts/ultimate-go-programming-chap6/</guid>
      <description>6. Error Handling 6.1 Default Error Values 退出程序的两种方式：os.exit() 和 panic()，如果需要跟踪堆栈信息就用后者。 error 是接口，是解耦的，这很重要，提供了很大</description>
    </item>
    
    <item>
      <title>Ultimate Go Programming 笔记——第五章</title>
      <link>https://tiandiyijian.top/posts/ultimate-go-programming-chap5/</link>
      <pubDate>Sun, 12 Jun 2022 21:07:39 +0800</pubDate>
      
      <guid>https://tiandiyijian.top/posts/ultimate-go-programming-chap5/</guid>
      <description>5. 组合 在 Go 中，组合是最应该关注的事情，重要性甚至超过并发。 5.1 Grouping Types Go 中没有子类型，也没有子类。 Go 是按照能够做什么来分组的，而不是是什么。 嵌入是</description>
    </item>
    
    <item>
      <title>Ultimate Go Programming 笔记——第四章</title>
      <link>https://tiandiyijian.top/posts/ultimate-go-programming-chap4/</link>
      <pubDate>Wed, 18 May 2022 20:40:08 +0800</pubDate>
      
      <guid>https://tiandiyijian.top/posts/ultimate-go-programming-chap4/</guid>
      <description>4. 解耦 4.1 方法 一切都是基于数据的，不理解数据就不理解问题，不理解问题就无法写代码。如果问题发生变化，那就意味着数据发生了变化，代码也必须要改变</description>
    </item>
    
    <item>
      <title>Ultimate Go Programming 笔记——第三章</title>
      <link>https://tiandiyijian.top/posts/ultimate-go-programming-chap3/</link>
      <pubDate>Fri, 06 May 2022 18:06:56 +0800</pubDate>
      
      <guid>https://tiandiyijian.top/posts/ultimate-go-programming-chap3/</guid>
      <description>3.数据结构 3.1 面向数据设计 任何想要解决的问题都是数据问题，如果不理解要使用的数据就不理解要解决的问题。 如果数据变了，那么问题也就变了，如果问</description>
    </item>
    
    <item>
      <title>Goland和IDEA使用cmder</title>
      <link>https://tiandiyijian.top/posts/goland%E5%92%8Cidea%E4%BD%BF%E7%94%A8cmder/</link>
      <pubDate>Mon, 18 Apr 2022 18:56:31 +0800</pubDate>
      
      <guid>https://tiandiyijian.top/posts/goland%E5%92%8Cidea%E4%BD%BF%E7%94%A8cmder/</guid>
      <description>如图：</description>
    </item>
    
    <item>
      <title>Conda安装gcc和g&#43;&#43;</title>
      <link>https://tiandiyijian.top/posts/conda%E5%AE%89%E8%A3%85gcc%E5%92%8Cg&#43;&#43;/</link>
      <pubDate>Mon, 18 Apr 2022 18:55:55 +0800</pubDate>
      
      <guid>https://tiandiyijian.top/posts/conda%E5%AE%89%E8%A3%85gcc%E5%92%8Cg&#43;&#43;/</guid>
      <description>1 2 $ conda install gcc_linux-64 # 安装gcc, 可以加等于号指定版本，下同 $ conda install gxx_linux-64 # 安装g++, 直接执行这个也会安装上面那个, 应该是依赖关系 这两行命令执行过之后会</description>
    </item>
    
    <item>
      <title>Ultimate Go Programming 笔记——第二章</title>
      <link>https://tiandiyijian.top/posts/ultimate-go-programming-chap2/</link>
      <pubDate>Tue, 12 Apr 2022 13:37:07 +0800</pubDate>
      
      <guid>https://tiandiyijian.top/posts/ultimate-go-programming-chap2/</guid>
      <description>2.语言机制 2.1变量 Type is everything, type is life! 类型提供了两个信息：内存大小和它的表示方法。 如果要使用一种类型的零值的话，为了保持一致性，最好使用 var 来声明</description>
    </item>
    
    <item>
      <title>Hugo踩坑</title>
      <link>https://tiandiyijian.top/posts/hugo%E8%B8%A9%E5%9D%91/</link>
      <pubDate>Tue, 05 Apr 2022 20:03:10 +0800</pubDate>
      
      <guid>https://tiandiyijian.top/posts/hugo%E8%B8%A9%E5%9D%91/</guid>
      <description>最近买了个腾讯云的服务器，又想起来我还有个博客了，看了下上篇博客的日期，竟然还是20年的，有点汗颜，又决定重新开始写博客记录一下了，一是发现</description>
    </item>
    
  </channel>
</rss>
